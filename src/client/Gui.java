package client;


import javax.swing.*;
import java.awt.event.*;


/**
 *
 * @author mansour
 */

public class Gui extends JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        contenu = new JPanel();
        panel_onglet = new JTabbedPane();
        contact = new JPanel();
        gestion_contact = new JScrollPane();
        list_contacts = new JList<>();
        bajout_contact = new JButton();
        bsup_contact = new JButton();
        discussion = new JPanel();
        jScrollPane2 = new JScrollPane();
        zone_messages = new JTextArea();
        champ_envoi_msg = new JTextField();
        bt_envoi_msg = new JButton();
        bt_envoi_fichier = new JButton();
        combo_liste_contacts = new JComboBox<>();
        chat = new JRadioButton();
        groupe = new JRadioButton();
        combo_liste_groupes = new JComboBox<>();
        combo_list_contact_ajout = new JComboBox<>();
        parametre = new JPanel();
        onglet_parametre = new JTabbedPane();
        panel_modifier_profil = new JPanel();
        bmodifier_profil = new JButton();
        panel_modif = new JPanel();
        modif_nom = new JTextField();
        modif_pseudo = new JTextField();
        modif_prenom = new JTextField();
        modif_password = new JTextField();
        modif_add = new JTextField();
        modif_port = new JTextField();
        jLabel10 = new JLabel();
        jLabel11 = new JLabel();
        jLabel12 = new JLabel();
        jLabel13 = new JLabel();
        jLabel14 = new JLabel();
        jLabel15 = new JLabel();
        valider_modif_profil = new JButton();
        annuler_modif_profil = new JButton();
        annuler_ajout_room = new JButton();
        panel_room = new JPanel();
        jScrollPane1 = new JScrollPane();
        list_rooms = new JList<>();
        bajout_room = new JButton();
        bsupprimer_room = new JButton();
        panel_ajout_room = new JPanel();
        jScrollPane3 = new JScrollPane();
        list_contact_room = new JList<>();
        champ_nom_room = new JTextField();
        valider_ajout_room = new JButton();
        jLabel9 = new JLabel();
        champ_recherche = new JTextField();
        brecherche = new JButton();
        label_pseudo = new JLabel();
        bdeconnexion = new JButton();
        accueil = new JPanel();
        champ_pseudo = new JTextField();
        label_champ_pseudo = new JLabel();
        jLabel2 = new JLabel();
        bt_valider = new JButton();
        label_salon = new JLabel();
        bt_inscrire = new JButton();
        champ_password_con = new JPasswordField();
        panel_inscrire = new JPanel();
        champ_nom_ins = new JTextField();
        champ_add_ip = new JTextField();
        champ_pseudo_ins = new JTextField();
        champ_mdp_ins = new JTextField();
        champ_port = new JTextField();
        bt_valider_ins = new JButton();
        bt_annuler_ins = new JButton();
        champ_prenom = new JTextField();
        jLabel1 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        ButtonGroup group = new ButtonGroup();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Salon de discussion");
        setBackground(java.awt.Color.white);
        setResizable(false);

        panel_onglet.setBackground(UIManager.getDefaults().getColor("Nb.Desktop.background"));
        panel_onglet.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panel_onglet.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        contenu.setVisible(false);
        panel_inscrire.setVisible(false);
        combo_liste_contacts.setVisible(false);
        combo_liste_groupes.setVisible(false);
        panel_modif.setVisible(false);
        panel_ajout_room.setVisible(false);
        list_contacts.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        list_contacts.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        list_contacts.setForeground(java.awt.Color.black);
        /*
        liste des contacts
        */
        list_contacts.setModel(new AbstractListModel<String>() {
            String[] strings = { "Pseudo nom prenom 1", "Pseudo 2", "Pseudo 3", "Pseudo 4", "Pseudo 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list_contacts.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        gestion_contact.setViewportView(list_contacts);

        bajout_contact.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bajout_contact.setIcon(new ImageIcon("icones/button_plus_green.png")); // NOI18N
        bajout_contact.setText("Ajouter");
        bajout_contact.setIconTextGap(50);
        bajout_contact.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bajout_contactActionPerformed(evt);
            }
        });

        bsup_contact.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bsup_contact.setIcon(new ImageIcon("icones/button_delete_red.png")); // NOI18N
        bsup_contact.setText("Supprimer");
        bsup_contact.setIconTextGap(20);
        bsup_contact.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bsup_contactActionPerformed(evt);
            }
        });
        combo_list_contact_ajout.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        GroupLayout contactLayout = new GroupLayout(contact);
        contact.setLayout(contactLayout);
        contactLayout.setHorizontalGroup(
            contactLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(contactLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gestion_contact, GroupLayout.PREFERRED_SIZE, 351, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addGroup(contactLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(bsup_contact, GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bajout_contact, GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combo_list_contact_ajout, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(108, 108, 108))
        );
        contactLayout.setVerticalGroup(
            contactLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(contactLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(bajout_contact)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_list_contact_ajout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bsup_contact)
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, contactLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gestion_contact)
                .addContainerGap())
        );

        panel_onglet.addTab("Contacts", contact);

        zone_messages.setEditable(false);
        zone_messages.setColumns(20);
        zone_messages.setRows(5);
        jScrollPane2.setViewportView(zone_messages);

        bt_envoi_msg.setIcon(new ImageIcon("icones/email_send.png")); // NOI18N
        bt_envoi_msg.setText("Envoyer");
        bt_envoi_msg.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bt_envoi_msgActionPerformed(evt);
            }
            /*
            Envoi message au room ou personne
            */
            private void bt_envoi_msgActionPerformed(ActionEvent evt) {
                if((champ_envoi_msg.getText()).equals("")){
                    JOptionPane.showMessageDialog(discussion,"taper un truc!!!");
                }else if((chat.isSelected())||(groupe.isSelected())){
                    //verifier si selection de room ou de chat
                    //fonction verif a faire
                    String type_discussion= verifChatOuRoom();
                    if(type_discussion.equals("non_chat") || type_discussion.equals("non_room"))
                        JOptionPane.showMessageDialog(discussion,"choisir contact ou room pour discuter");
                    else{
                        //envoi du message au room ou chat selectionne
                       String message= champ_envoi_msg.getText();
                       zone_messages.append("Moi:"+message+"\n");
                       champ_envoi_msg.setText("");
                    }
                }else {
                    JOptionPane.showMessageDialog(discussion,"chosir le type de discussion");
                }
            }
            
            /*
            verifier la selection du room ou chat ou renvoyer la valeur selectionnee
            a faire
            */
            public String verifChatOuRoom(){
                String sortie="";
                return sortie;
            }
        });
        bt_envoi_fichier.setText("Fichier");
        
       
        group.add(chat);
        group.add(groupe);
        /*
        affichage combo_list_contact pour chat
        */
        chat.setText("chat simple");
        chat.addItemListener(new ItemListener() {
         public void itemStateChanged(ItemEvent e) {
            combo_liste_groupes.setVisible(false);
            combo_liste_contacts.setVisible(true);
         }           
      });

        groupe.setText("rooms");
        /*
        affichage combo_list_rooms pour chat
        */
        groupe.addItemListener(new ItemListener() {
         public void itemStateChanged(ItemEvent e) {         
            combo_liste_groupes.setVisible(true);
            combo_liste_contacts.setVisible(false);
            
         }           
      });
        GroupLayout discussionLayout = new GroupLayout(discussion);
        discussion.setLayout(discussionLayout);
        discussionLayout.setHorizontalGroup(
            discussionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(discussionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(discussionLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(combo_liste_contacts, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chat, GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(groupe)
                    .addComponent(combo_liste_groupes, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(discussionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(discussionLayout.createSequentialGroup()
                        .addComponent(champ_envoi_msg, GroupLayout.PREFERRED_SIZE, 355, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_envoi_msg, GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_envoi_fichier, GroupLayout.PREFERRED_SIZE, 97, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        discussionLayout.setVerticalGroup(
            discussionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(discussionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(discussionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(discussionLayout.createSequentialGroup()
                        .addComponent(chat)
                        .addGap(15, 15, 15)
                        .addComponent(groupe)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_liste_contacts, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(combo_liste_groupes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 277, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(discussionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(champ_envoi_msg)
                    .addGroup(GroupLayout.Alignment.TRAILING, discussionLayout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(discussionLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt_envoi_fichier, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_envoi_msg, GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))))
                .addContainerGap())
        );

        panel_onglet.addTab("Discussion", discussion);

        bmodifier_profil.setIcon(new ImageIcon("icones/software_update.png")); // NOI18N
        bmodifier_profil.setText("Modifier");
        /*
        modification de profil
        */
        bmodifier_profil.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bmodifier_profilActionPerformed(evt);
            }

            private void bmodifier_profilActionPerformed(ActionEvent evt) {
                panel_modif.setVisible(true);
                //chargement des infos du profil et remplissage des champs
            }

        });
            
        jLabel10.setText("Nom");

        jLabel11.setText("Pseudo");

        jLabel12.setText("Prénom");

        jLabel13.setText("Adresse");

        jLabel14.setText("Password");

        jLabel15.setText("Port");
        /*
        validation de la modification de profil
        */
        valider_modif_profil.setText("Valider");
        valider_modif_profil.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                valider_modif_profilActionPerformed(evt);
            }

            private void valider_modif_profilActionPerformed(ActionEvent evt) {
                //verif des champs
                //update dans la base
                panel_modif.setVisible(false);
                panel_modifier_profil.setVisible(true);
                annuler_champ_modif();
 
            }
        });
        
        /*
        annulation modif
        */
        annuler_modif_profil.setText("Annuler");
        annuler_modif_profil.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                annuler_modif_profilActionPerformed(evt);
            }

            private void annuler_modif_profilActionPerformed(ActionEvent evt) {
                panel_modif.setVisible(false);
                panel_modifier_profil.setVisible(true);
                annuler_champ_modif();
 
            }
        });
        GroupLayout panel_modifLayout = new GroupLayout(panel_modif);
        panel_modif.setLayout(panel_modifLayout);
        panel_modifLayout.setHorizontalGroup(
            panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, panel_modifLayout.createSequentialGroup()
                .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panel_modifLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel10)
                        .addGap(37, 37, 37))
                    .addGroup(GroupLayout.Alignment.TRAILING, panel_modifLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(modif_nom, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)
                    .addComponent(modif_pseudo, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)
                    .addComponent(modif_add, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_modifLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(modif_port, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_modifLayout.createSequentialGroup()
                        .addComponent(jLabel14, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(modif_password, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_modifLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(modif_prenom, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(annuler_modif_profil)
                    .addComponent(valider_modif_profil))
                .addContainerGap())
        );
        panel_modifLayout.setVerticalGroup(
            panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panel_modifLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modif_nom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(modif_prenom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panel_modifLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(modif_pseudo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(modif_password, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)))
                    .addGroup(panel_modifLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(valider_modif_profil)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(annuler_modif_profil)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_modifLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modif_add, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(modif_port, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15))
                .addGap(36, 36, 36))
        );

        GroupLayout panel_modifier_profilLayout = new GroupLayout(panel_modifier_profil);
        panel_modifier_profil.setLayout(panel_modifier_profilLayout);
        panel_modifier_profilLayout.setHorizontalGroup(
            panel_modifier_profilLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panel_modifier_profilLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bmodifier_profil, GroupLayout.PREFERRED_SIZE, 128, GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(panel_modif, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_modifier_profilLayout.setVerticalGroup(
            panel_modifier_profilLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panel_modifier_profilLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panel_modifier_profilLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panel_modifier_profilLayout.createSequentialGroup()
                        .addComponent(bmodifier_profil)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(panel_modif, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        onglet_parametre.addTab("Modifier profil", panel_modifier_profil);
        /*
        liste des rooms pour la discussion
        */
        list_rooms.setModel(new AbstractListModel<String>() {
            String[] strings = { "room1", "room 2", "room 3", "room 4", "room 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(list_rooms);
            
        /*
        ajout de room
        */
        bajout_room.setIcon(new ImageIcon("icones/button_plus_green.png")); // NOI18N
        bajout_room.setText("Ajouter room");
        bajout_room.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bajout_roomActionPerformed(evt);
            }

            private void bajout_roomActionPerformed(ActionEvent evt) {
                panel_ajout_room.setVisible(true);
            }
        });
        bsupprimer_room.setIcon(new ImageIcon("icones/button_delete_red.png")); // NOI18N
        bsupprimer_room.setText("Supprimer room");
        /*
        list des contacts pour room
        */
        list_contact_room.setModel(new AbstractListModel<String>() {
            String[] strings = { "contact 1", "contact 2", "contact 3", "contact 4", "contact 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(list_contact_room);

        
        /*
        valider ajout room
        */
        valider_ajout_room.setText("Valider");
        valider_ajout_room.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                valider_ajout_roomActionPerformed(evt);
            }

            private void valider_ajout_roomActionPerformed(ActionEvent evt) {
                //ajout de room dans la base
                champ_nom_room.setText("");
                panel_ajout_room.setVisible(false);
            }
        });
        jLabel9.setText("Choisir les contacts                  nom room              ");
        annuler_ajout_room.setText("annuler");
        
        /*
        annulation
        
        */
        annuler_ajout_room.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                annuler_ajout_roomActionPerformed(evt);
            }

            private void annuler_ajout_roomActionPerformed(ActionEvent evt) {
                champ_nom_room.setText("");
                panel_ajout_room.setVisible(false);
            }
        });
        javax.swing.GroupLayout panel_ajout_roomLayout = new javax.swing.GroupLayout(panel_ajout_room);
        panel_ajout_room.setLayout(panel_ajout_roomLayout);
        panel_ajout_roomLayout.setHorizontalGroup(
            panel_ajout_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_ajout_roomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_ajout_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_ajout_roomLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addGroup(panel_ajout_roomLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_ajout_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_ajout_roomLayout.createSequentialGroup()
                                .addComponent(champ_nom_room, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_ajout_roomLayout.createSequentialGroup()
                                .addGroup(panel_ajout_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(annuler_ajout_room)
                                    .addComponent(valider_ajout_room))
                                .addGap(57, 57, 57))))))
        );
        panel_ajout_roomLayout.setVerticalGroup(
            panel_ajout_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_ajout_roomLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_ajout_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_ajout_roomLayout.createSequentialGroup()
                        .addComponent(champ_nom_room, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(valider_ajout_room)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annuler_ajout_room))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_roomLayout = new javax.swing.GroupLayout(panel_room);
        panel_room.setLayout(panel_roomLayout);
        panel_roomLayout.setHorizontalGroup(
            panel_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_roomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(bajout_room)
                .addGap(31, 31, 31)
                .addComponent(bsupprimer_room)
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(panel_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_roomLayout.createSequentialGroup()
                    .addContainerGap(282, Short.MAX_VALUE)
                    .addComponent(panel_ajout_room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(126, Short.MAX_VALUE)))
        );
        panel_roomLayout.setVerticalGroup(
            panel_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_roomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_roomLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panel_roomLayout.createSequentialGroup()
                        .addGroup(panel_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bajout_room)
                            .addComponent(bsupprimer_room))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panel_roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_roomLayout.createSequentialGroup()
                    .addContainerGap(78, Short.MAX_VALUE)
                    .addComponent(panel_ajout_room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        onglet_parametre.addTab("Rooms", panel_room);

        GroupLayout parametreLayout = new GroupLayout(parametre);
        parametre.setLayout(parametreLayout);
        parametreLayout.setHorizontalGroup(
            parametreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(parametreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(onglet_parametre)
                .addContainerGap())
        );
        parametreLayout.setVerticalGroup(
            parametreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(parametreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(onglet_parametre)
                .addContainerGap())
        );

        panel_onglet.addTab("Paramètre", parametre);
        champ_recherche.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        brecherche.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        brecherche.setIcon(new ImageIcon("icones/find.png")); // NOI18N
        brecherche.setText("Rechercher");
        brecherche.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                brechercheActionPerformed(evt);
            }
        });

        label_pseudo.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        label_pseudo.setText("Pseudo: Mansour");

        bdeconnexion.setIcon(new ImageIcon("icones/quit.png")); // NOI18N
        bdeconnexion.setText("logout");

        GroupLayout contenuLayout = new GroupLayout(contenu);
        contenu.setLayout(contenuLayout);
        contenuLayout.setHorizontalGroup(
            contenuLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(contenuLayout.createSequentialGroup()
                .addComponent(label_pseudo, GroupLayout.PREFERRED_SIZE, 352, GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(champ_recherche, GroupLayout.PREFERRED_SIZE, 142, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(brecherche, GroupLayout.PREFERRED_SIZE, 164, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bdeconnexion, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(panel_onglet)
        );
        contenuLayout.setVerticalGroup(
            contenuLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, contenuLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(contenuLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, contenuLayout.createSequentialGroup()
                        .addGroup(contenuLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(brecherche, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)
                            .addComponent(bdeconnexion))
                        .addGap(20, 20, 20))
                    .addGroup(contenuLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(label_pseudo, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
                        .addComponent(champ_recherche, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)))
                .addComponent(panel_onglet, GroupLayout.PREFERRED_SIZE, 412, GroupLayout.PREFERRED_SIZE))
        );

        label_pseudo.getAccessibleContext().setAccessibleName("");
        label_pseudo.getAccessibleContext().setAccessibleDescription("");
        champ_pseudo.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        label_champ_pseudo.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        label_champ_pseudo.setIcon(new ImageIcon("icones/login.png")); // NOI18N
        label_champ_pseudo.setText("Pseudo");

        jLabel2.setIcon(new ImageIcon("icones/key.png")); // NOI18N
        jLabel2.setText("Mot de passe");

        bt_valider.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bt_valider.setIcon(new ImageIcon("icones/check.png")); // NOI18N
        bt_valider.setText("Connexion");
        
        /*
        valider connexion
        */
        bt_valider.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bt_validerActionPerformed(evt);
            }

            private void bt_validerActionPerformed(ActionEvent evt) {
                if(((champ_pseudo.getText()).equals(""))||( (champ_password_con.getText()).equals(""))){
                    JOptionPane.showMessageDialog(accueil,"veuillez renseigner les champs", "Remplir champs svp", HEIGHT);
                    
                }else{
                    //verification dans la base ,affichage profil, chargement et affectation des donnees
                    accueil.setVisible(false);
                    contenu.setVisible(true);
                    //sinon erreur
                }
            }
        });
        label_salon.setFont(new java.awt.Font("Ubuntu Light", 3, 24)); // NOI18N
        label_salon.setIcon(new ImageIcon("icones/chat_2.png")); // NOI18N
        label_salon.setText("Salon de discussion");

        bt_inscrire.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bt_inscrire.setIcon(new ImageIcon("icones/people.png")); // NOI18N
        bt_inscrire.setText("S'inscrire");
        bt_inscrire.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bt_inscrireActionPerformed(evt);
            }

            private void bt_inscrireActionPerformed(ActionEvent evt) {
                accueil.setVisible(false);
                panel_inscrire.setVisible(true);
                annuler_champ_inscrire();
            }
            public void annuler_champ_inscrire(){
                champ_nom_ins.setText("");
                champ_prenom.setText("");
                champ_pseudo_ins.setText("");
                champ_mdp_ins.setText("");
                champ_add_ip.setText("");
                champ_port.setText("");
            }
            
        });
        
        champ_password_con.setText("");

        GroupLayout accueilLayout = new GroupLayout(accueil);
        accueil.setLayout(accueilLayout);
        accueilLayout.setHorizontalGroup(
            accueilLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, accueilLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(accueilLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_champ_pseudo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(119, 119, 119)
                .addGroup(accueilLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(champ_pseudo, GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                    .addComponent(champ_password_con))
                .addGap(194, 194, 194))
            .addGroup(accueilLayout.createSequentialGroup()
                .addGroup(accueilLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(accueilLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(label_salon, GroupLayout.PREFERRED_SIZE, 415, GroupLayout.PREFERRED_SIZE))
                    .addGroup(accueilLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(bt_valider, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(bt_inscrire, GroupLayout.PREFERRED_SIZE, 169, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        accueilLayout.setVerticalGroup(
            accueilLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(accueilLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(label_salon, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(accueilLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(champ_pseudo)
                    .addComponent(label_champ_pseudo, GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addGap(63, 63, 63)
                .addGroup(accueilLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
                    .addComponent(champ_password_con, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(accueilLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_valider, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_inscrire, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        champ_nom_ins.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        champ_add_ip.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
       

        champ_pseudo_ins.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        champ_mdp_ins.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        champ_port.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        bt_valider_ins.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bt_valider_ins.setIcon(new ImageIcon("icones/check.png")); // NOI18N
        bt_valider_ins.setText("Valider");
        /*
        validation de l'inscription
        */
         bt_valider_ins.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bt_valider_insActionPerformed(evt);
            }
           
            private void bt_valider_insActionPerformed(ActionEvent evt) {
                if(((champ_nom_ins.getText()).equals(""))||((champ_prenom.getText()).equals(""))||
                        ((champ_pseudo_ins.getText()).equals(""))||((champ_mdp_ins.getText()).equals(""))||
                        ((champ_add_ip.getText()).equals("")))
                {
                    JOptionPane.showMessageDialog(panel_inscrire,"Veuillez remplir les champs svp!", "Warning", HEIGHT);
                    
                }else{
                    try{
                        int port = Integer.parseInt(champ_port.getText());
                        if(port<=0)JOptionPane.showMessageDialog(panel_inscrire,"Port est un entier > 0!", "Warning", HEIGHT);
                        //ajout des informations dans la base de donnees
                        else{
                            panel_inscrire.setVisible(false);
                            accueil.setVisible(true);
                            annuler_champ_accueil();
                        }
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(panel_inscrire,"Port est un entier", "Warning", HEIGHT);
                    
                    }
                }
            }
         });
        bt_annuler_ins.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bt_annuler_ins.setIcon(new ImageIcon("icones/close.png")); // NOI18N
        bt_annuler_ins.setText("Annuler");
        /*
        fermeture du panel inscription
        */
        bt_annuler_ins.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bt_annuler_insActionPerformed(evt);
            }

            private void bt_annuler_insActionPerformed(ActionEvent evt) {
                panel_inscrire.setVisible(false);
                accueil.setVisible(true);
                annuler_champ_accueil();
            }
        });
        champ_prenom.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        jLabel1.setText("NOM");

        jLabel3.setText("Prénom");

        jLabel4.setText("Port");

        jLabel5.setText("Pseudo");

        jLabel6.setText("Mot de passe");

        jLabel7.setText("Adresse ip");

        jLabel8.setFont(new java.awt.Font("Ubuntu Light", 3, 24)); // NOI18N
        jLabel8.setText("Inscription");

        GroupLayout panel_inscrireLayout = new GroupLayout(panel_inscrire);
        panel_inscrire.setLayout(panel_inscrireLayout);
        panel_inscrireLayout.setHorizontalGroup(
            panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, panel_inscrireLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, panel_inscrireLayout.createSequentialGroup()
                        .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                            .addComponent(champ_port, GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(champ_prenom)
                            .addComponent(champ_nom_ins))
                        .addGap(46, 46, 46)
                        .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 84, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(GroupLayout.Alignment.TRAILING, panel_inscrireLayout.createSequentialGroup()
                        .addComponent(bt_valider_ins, GroupLayout.PREFERRED_SIZE, 127, GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)))
                .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panel_inscrireLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(champ_mdp_ins, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE)
                            .addComponent(champ_pseudo_ins, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE)
                            .addComponent(champ_add_ip, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE)))
                    .addComponent(bt_annuler_ins, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
            .addGroup(GroupLayout.Alignment.TRAILING, panel_inscrireLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 251, GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
        );
        panel_inscrireLayout.setVerticalGroup(
            panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, panel_inscrireLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(champ_nom_ins, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                    .addComponent(champ_pseudo_ins, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE))
                .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panel_inscrireLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(champ_prenom, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                            .addComponent(champ_mdp_ins, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(GroupLayout.Alignment.TRAILING, panel_inscrireLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(champ_port, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                    .addComponent(champ_add_ip, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(panel_inscrireLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_annuler_ins, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_valider_ins, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(contenu, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(accueil, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(panel_inscrire, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(contenu, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(accueil, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(panel_inscrire, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        
     
    
    
    /*
    supprimer un contact 
    */
    private void bsup_contactActionPerformed(ActionEvent evt) {                                             
        //verifier si la liste des contacts est selectionee
        //suppression dans la base
        //update de laffichage des contacts
    }                                            

    /*
    ajout de contact suivant le combo_liste_contact_ajout
    */
    private void bajout_contactActionPerformed(ActionEvent evt) {                                               
        //verifier si le combo est selection
        //ajouter dans la base
        //update affichage de la liste des contacts
    }                                              

    private void brechercheActionPerformed(ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

                                             
                public void annuler_champ_modif(){
                modif_add.setText("");
                modif_nom.setText("");
                modif_password.setText("");
                modif_port.setText("");
                modif_prenom.setText("");
                modif_pseudo.setText("");
            }

    public void annuler_champ_accueil(){
        champ_pseudo.setText("");
        champ_password_con.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private JPanel accueil;
    private JButton annuler_modif_profil;
    private JButton bajout_contact;
    private JButton bajout_room;
    private JButton bdeconnexion;
    private JButton bmodifier_profil;
    private JButton brecherche;
    private JButton bsup_contact;
    private JButton bsupprimer_room;
    private JButton bt_annuler_ins;
    private JButton bt_envoi_fichier;
    private JButton bt_envoi_msg;
    private JButton bt_inscrire;
    private JButton bt_valider;
    private JButton bt_valider_ins;
    private JButton annuler_ajout_room;
    private JTextField champ_add_ip;
    private JTextField champ_envoi_msg;
    private JTextField champ_mdp_ins;
    private JTextField champ_nom_ins;
    private JTextField champ_nom_room;
    private JPasswordField champ_password_con;
    private JTextField champ_port;
    private JTextField champ_prenom;
    private JTextField champ_pseudo;
    private JTextField champ_pseudo_ins;
    private JTextField champ_recherche;
    private JRadioButton chat;
    private JComboBox<String> combo_liste_contacts;
    private JComboBox<String> combo_liste_groupes;
    private JComboBox<String> combo_list_contact_ajout;
    private JPanel contact;
    private JPanel contenu;
    private JPanel discussion;
    private JScrollPane gestion_contact;
    private JRadioButton groupe;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JLabel label_champ_pseudo;
    private JLabel label_pseudo;
    private JLabel label_salon;
    private JList<String> list_contact_room;
    private JList<String> list_contacts;
    private JList<String> list_rooms;
    private JTextField modif_add;
    private JTextField modif_nom;
    private JTextField modif_password;
    private JTextField modif_port;
    private JTextField modif_prenom;
    private JTextField modif_pseudo;
    private JTabbedPane onglet_parametre;
    private JPanel panel_ajout_room;
    private JPanel panel_inscrire;
    private JPanel panel_modif;
    private JPanel panel_modifier_profil;
    private JTabbedPane panel_onglet;
    private JPanel panel_room;
    private JPanel parametre;
    private JButton valider_ajout_room;
    private JButton valider_modif_profil;
    private JTextArea zone_messages;
    // End of variables declaration                   
}

